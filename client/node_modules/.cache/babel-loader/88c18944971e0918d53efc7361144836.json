{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pawjoshi\\\\Downloads\\\\graphql-demo\\\\graphql-demo\\\\client\\\\src\\\\Components\\\\GetTodos.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Form from \"./Form\";\nimport { DELETE_TODO_MUTATION } from \"../GraphQL/Mutations\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { LOAD_TODOS } from \"../GraphQL/Queries\";\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GetTodos() {\n  _s();\n  const {\n    data,\n    loading,\n    refetch\n  } = useQuery(LOAD_TODOS);\n  const [deleteTodo, {\n    data: successResponse,\n    deleteLoading,\n    error\n  }] = useMutation(DELETE_TODO_MUTATION);\n  const [todos, setTodos] = useState([]);\n  const deleteTodoAction = id => {\n    deleteTodo({\n      variables: {\n        id: id\n      }\n    });\n  };\n  useEffect(() => {\n    var _successResponse$dele;\n    if (successResponse !== null && successResponse !== void 0 && (_successResponse$dele = successResponse.deleteTodo) !== null && _successResponse$dele !== void 0 && _successResponse$dele.id) {\n      refetch();\n      console.log('Todo is deleted successfully!!!');\n    } else if (error) {\n      console.log('Error: ' + error);\n    }\n  }, [successResponse, error, refetch]);\n  useEffect(() => {\n    if (data) {\n      setTodos(data.getAllTodos);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      refetch: refetch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Todo List:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-collection\",\n      children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), todos.map(val => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-items\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \", val.todoContent]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-btn\",\n            onClick: () => deleteTodoAction(val.id),\n            children: \" Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), deleteLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"loader\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this)]\n        }, val.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(GetTodos, \"f/cMoMbEaX8xg/hJgZgFzZ7kE7w=\", false, function () {\n  return [useQuery, useMutation];\n});\n_c = GetTodos;\nexport default GetTodos;\nvar _c;\n$RefreshReg$(_c, \"GetTodos\");","map":{"version":3,"names":["React","useEffect","useState","Form","DELETE_TODO_MUTATION","useQuery","useMutation","LOAD_TODOS","jsxDEV","_jsxDEV","GetTodos","_s","data","loading","refetch","deleteTodo","successResponse","deleteLoading","error","todos","setTodos","deleteTodoAction","id","variables","_successResponse$dele","console","log","getAllTodos","children","fileName","_jsxFileName","lineNumber","columnNumber","className","class","map","val","todoContent","onClick","_c","$RefreshReg$"],"sources":["C:/Users/pawjoshi/Downloads/graphql-demo/graphql-demo/client/src/Components/GetTodos.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Form from \"./Form\";\nimport { DELETE_TODO_MUTATION } from \"../GraphQL/Mutations\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { LOAD_TODOS } from \"../GraphQL/Queries\";\nimport './index.css';\n\nfunction GetTodos() {\n  const { data, loading, refetch } = useQuery(LOAD_TODOS);\n  const [deleteTodo, { data: successResponse, deleteLoading, error }] = useMutation(DELETE_TODO_MUTATION);\n  const [todos, setTodos] = useState([]);\n\n  const deleteTodoAction = (id) => {\n    deleteTodo({\n      variables: {\n        id: id,\n      },\n    });\n    \n  };\n\n  useEffect(() => {\n    if (successResponse?.deleteTodo?.id) {\n      refetch();\n      console.log('Todo is deleted successfully!!!');\n    } else if (error) {\n      console.log('Error: ' + error);\n    }\n  }, [successResponse, error, refetch]);\n\n  useEffect(() => {\n    if (data) {\n      setTodos(data.getAllTodos);\n    }\n  }, [data]);\n\n  return (\n    <div>\n      <Form refetch={refetch} />\n      <label>Todo List:</label>\n      <div className=\"list-collection\">\n        {loading && <div class=\"loader\"></div>}\n        {todos.map((val) => {\n          return (\n            <div key={val.id} className=\"list-items\">\n              <li> {val.todoContent}</li>\n              <button className=\"delete-btn\" onClick={() => deleteTodoAction(val.id)}> Delete</button>\n              {deleteLoading && <div class=\"loader\"></div>}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default GetTodos;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}